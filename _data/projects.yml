- title: Twitch Chat Bot and Notification System
  logo: twitch.png
  include: true
  report:
  docs:
  github:
  link:
  content: >

        In a team of 2, designed and implemented a plugin based
        chat bot for Twitch in C#. The bot processes various events such as
        subscriptions and bit donations. Notifications occur over
        websockets and are delivered to custom made webpages for display
        on stream via OBS. Source code will be available soon.

- title: OpenSFS Lustre Build Farm
  logo: bb.png
  include: true
  report:
  docs:
  github: https://github.com/opensfs/lustre-buildbot-config/
  link: http://build.lustre.org/
  content: >

        A build farm for the parallel and distributed file system,
        [Lustre](https://git.hpdd.intel.com/?p=fs/lustre-release.git).
        Built on top of [Buildbot](https://buildbot.net/), the build
        farm builds each proposed change and tag made in the Lustre
        repository.

- title: Custom C# List View Control
  logo: list.png
  include: true
  report:
  docs:
  github: https://github.com/dinatale2/Datalist
  link:
  content: >

        A custom C# control which displays information in a list view. The
        control is fully customizable allowing the programmer to control row
        and column color, column names, column data types, and much more.
        The list can also be displayed as a dropdown list. The control
        leverages a wrapper for Microsoft's UxTheme interface for themed
        drawing.

- title: Modification and Evaluation of Linux I/O Schedulers
  logo: io.png
  include: true
  report: /files/io_report.pdf
  docs:
  github:
  link:
  content: >

        In a team of four, three different I/O schedulers were implemented
        for the Linux Kernel. Performance benchmarking of the I/O schedulers
        was performed using IOZone and Bonnie++. A performance
        analysis was then completed which compared the three new I/O schedulers
        to a random I/O scheduler and Linux's CFQ I/O scheduler.

- title: GPU Accelerated Ray-Tracing on NVIDIA Hardware
  logo:
  include: true
  report: /files/cuda_raytracer.pdf
  docs:
  github:
  link:
  content: >

        In a team of two, designed and implemented a ray tracer with Nvidia's
        CUDA. The ray tracer was capable of loading an arbitrary mesh and it's
        associated KD tree and produced images based on camera position and
        light sources in the scene.

- title: Travel Prediction Model
  logo:
  include: true
  report: /files/travel_prediction_report.pdf
  docs:
  github:
  link:
  content: >

        In a team of two, implemented a travel prediction model based
        on [latent factors of travel](
        http://snap.stanford.edu/social2012/papers/guerzhoy-hertzmann.pdf).
        Factors were learned using Batch Gradient Descent. Latent
        factors were the desirability of a location and a distance-time
        factor reflecting how far a person may travel in a given time.

- title: Observation of the 802.11 Channel Capture Effect
  logo: wifi.png
  include: true
  report: /files/channel_capture_report.pdf
  docs:
  github:
  link:
  content: >

       In a team of two, designed and implemented a set of experiments to
       observe the 802.11 Channel Capture Effect. Packet traces were collected
       and processed with a custom written C# application using the
       [SharpPcap](https://github.com/chmorgan/sharppcap) library.

- title: A Harvard Architecture Assembly Simulator
  logo:
  include: true
  report: /files/senior_project.pdf
  docs:
  github:
  link:
  content: >

         In a team of four, designed an instruction set architecture and
         implemented a simulator which embodies that instruction set.
         Software engineering principles were used to complete this project.
         Project was submitted as part of the IEEE Contest 2010 upon
         completion.

- title: Twitch Chat Bot and Notification System
  logo: twitch.png
  include: true
  report:
  docs:
  github:
  link:
  content: >

        In a team of 2, designed and implemented a plugin based
        chat bot for Twitch in C#. The bot processes various events such as
        subscriptions and bit donations. Notifications occur over
        websockets and are delivered to custom made webpages for display
        on stream via OBS. Source code will be available soon.

- title: OpenSFS Lustre Build Farm
  logo: bb.png
  include: true
  report:
  docs:
  github: https://github.com/opensfs/lustre-buildbot-config/
  link: http://build.lustre.org/
  content: >

        A build farm for the parallel and distributed file system,
        [Lustre](https://git.hpdd.intel.com/?p=fs/lustre-release.git).
        Built on top of [Buildbot](https://buildbot.net/), the build
        farm builds each proposed change and tag made in the Lustre
        repository.

- title: Modification and Evaluation of Linux I/O Schedulers
  logo: io.png
  include: true
  report: /files/io_report.pdf
  docs:
  github:
  link:
  content: >

        In a team of four, three different I/O schedulers were implemented
        for the Linux Kernel. Performance of the I/O schedulers were
        benchmarked for performance using IOZone and Bonnie++. A performance
        analysis was performed comparing the three new I/O schedulers to
        a random and Linux's CFQ I/O schedulers.

- title: Travel Prediction Model
  logo:
  include: true
  report: /files/travel_prediction_report.pdf
  docs:
  github:
  link:
  content: >

        In a team of two, implemented a travel prediction model based
        on [latent factors of travel](
        http://snap.stanford.edu/social2012/papers/guerzhoy-hertzmann.pdf).
        Factors learned using Batch Gradient Descent. Latent
        factors were the desirability of a location and a distance-time
        factor reflecting how far a person may travel in a given time.

- title: Observation of the 802.11 Channel Capture Effect
  logo: wifi.png
  include: true
  report: /files/channel_capture_report.pdf
  docs:
  github:
  link:
  content: >

       In a team of two, designed and implemented a set of experiments to
       observe the 802.11 Channel Capture Effect. Packet traces were collected
       and processed with a custom written C# application using the
       [SharpPcap](https://github.com/chmorgan/sharppcap) library.

- title: A Harvard Architecture Assembly Simulator
  logo:
  include: true
  report: /files/senior_project.pdf
  docs:
  github:
  link:
  content: >

         In a team of four, designed an instruction set architecture and
         implemented a simulator which embodies that instruction set.
         Software engineering principles were used to complete this project.
         Project was submitted as part of the IEEE Contest 2010 upon
         completion.
